<?php $this->headTitle('Install')->prepend('MVC Skeleton Application'); ?>

<h2>MVC Skeleton Application</h2>

<p>
    If you want to use <a href="https://docs.zendframework.com/zend-mvc/">zend-mvc</a>
    to build <a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller">Model-View-Controller</a>
    (MVC) applications, we recommend you start with our skeleton application.
</p>

<h2>Installation using Composer</h2>

<p>
    The easiest way to create a new Zend Framework project is to
    use <a href="https://getcomposer.org">Composer</a>. If you
    don't have it already installed, then please install it per their
    <a href="https://getcomposer.org/doc/00-intro.md">documentation</a>.
</p>

<p>To create your new Zend Framework project:</p>

<pre><code class="lang-bash">$ composer create-project -n -sdev zendframework/skeleton-application path/to/install</code></pre>

<p>Once installed, you can test it out immediately using PHP's built-in web server:</p>

<pre><code class="lang-bash">$ composer serve</code></pre>

<p>This will start the PHP cli-server on port 8080, and bind it to all network interfaces.</p>

<p><strong>Note:</strong> The built-in CLI server is <i>for development only</i>.</p>

<h2>Using Vagrant</h2>

<p>
    This skeleton includes a Vagrantfile based on Ubuntu 14.04, and
    using the ondrej/php PPA to provide PHP 7.0. Start it up using:
</p>

<pre><code class="lang-bash">$ vagrant up</code></pre>

<p>
    Once built, you can also run composer within the box. For example, the following
    will install dependencies:
</p>

<pre><code class="lang-bash">$ vagrant ssh -c 'composer install'</code></pre>

<p>While this will update them:</p>

<pre><code class="lang-bash">$ vagrant ssh -c 'composer update'</code></pre>

<p>
    While running, Vagrant maps your host port 8080 to port 80 on the virtual
    machine; you can visit the site at http://localhost:8080/
</p>

<h2>Using docker-compose</h2>

<p>
    The skeleton also provides a <code>docker-compose.yml</code>
    for use with <a href="https://docs.docker.com/compose">docker-compose</a>; it
    uses the <code>Dockerfile</code> provided as its base. Build
    and start the image using:
</p>

<pre><code class="lang-bash">$ docker-compose up -d --build</code></pre>

<p>At this point, you can visit http://localhost:8080 to see the site running.</p>

<p>
    You can also run composer from the image. The container environment is named
    "zf", so you will pass that value to <code>docker-compose run</code>:
</p>

<pre><code class="lang-bash">$ docker-compose run zf composer install</code></pre>

<?php $this->placeholder('sub-navigation')->set(
    $this->render('include::download-menu', ['active' => '/downloads/skeleton-app'])
) ?>
